#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use libkadeploy2::conflib;
use libkadeploy2::deploy_iolib;
use libkadeploy2::confroot;

# local functions declaration
sub usage;

# Options
my $help;
my $clustername;

# Globals
my $deployment_number;
my $conf_root_dir;

GetOptions('z=s'    => \$clustername,
  'cluster=s'       => \$clustername,
  'h!'              => \$help,
  'C=s'             => \$conf_root_dir,
  'configuration=s' => \$conf_root_dir
);

if (!$conf_root_dir eq "") {
  libkadeploy2::confroot::set_conf_rootdir($conf_root_dir);
}
libkadeploy2::confroot::get_conf_rootdir();
libkadeploy2::confroot::info();

if ($help) {
    usage();
    exit 0;
}

# Configuration
my $configuration = libkadeploy2::conflib->new();

if (!$clustername eq "") {
        $configuration->set_clustername($clustername);
        print "using settings for cluster " . $clustername . "\n";
} else {
        print "using settings for default cluster\n";
}
# load configuration files this part is overwritten by any specified nodelist
if (!$configuration->check_conf()) {
        print "ERROR : problem occured loading configuration file\n";
        exit 1;
}
# register configuration
libkadeploy2::deploy_iolib::register_conf($configuration);


# Returns all environments that match the given name
sub get_deployment_stats($) {

    my $dbh = shift;

    my $sth = $dbh->prepare("SELECT max(deployment.id) as max FROM deployment");
    $sth->execute();

    while (my $ref = $sth->fetchrow_hashref()) {
        $deployment_number = $ref->{max};
    }

    $sth->finish();

    $sth = $dbh->prepare("select count(deployment.id) as 'deploynb', date_format(deployment.startdate, '%Y %m') as 'month' from deployment group by date_format(deployment.startdate, '%Y %m')");
    $sth->execute();

    my %deploy_dates;

    while (my $ref = $sth->fetchrow_hashref()) {
	$deploy_dates{$ref->{month}} = $ref->{deploynb};
#        print $ref->{deploynb} . "\t" . $ref->{month} ."\n";
    }

    $sth->finish();

    print "# Mois\t\tnbdepl\tnbtot\tnbmoy\n";

    $sth = $dbh->prepare("select count(*) as 'nbtot', date_format(deployment.startdate, '%Y %m') as 'month' from deployment, deployed where deployed.deployid=deployment.id group by date_format(deployment.startdate, '%Y %m')");
    $sth->execute();

    while (my $ref = $sth->fetchrow_hashref()) {
        print $ref->{month} . "\t\t" . $deploy_dates{$ref->{month}} . "\t" . $ref->{nbtot} . "\t" .  int(10 * $ref->{nbtot}/$deploy_dates{$ref->{month}} + 0.5)/10 . "\n";
    }

    $sth->finish();



    return 1;
}


####

my $base = libkadeploy2::deploy_iolib::connect();

get_deployment_stats($base);

print "\nnumber of deployments:", $deployment_number, "\n"; 

libkadeploy2::deploy_iolib::disconnect($base);


sub usage
{
  print "$0
\t-c | --cluster              Cluster name about which statistics should be returned
\t-h                          This help
\t-C | --configuration <dir>  Configuration root directory";
}
