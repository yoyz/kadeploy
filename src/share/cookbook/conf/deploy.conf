# Configuration file for kadeploy

deploy_user = deploy

kadeploy2_directory = /opt/kadeploy/

use_internal_parallel_command = yes

do_fdisk_on_deploy=yes



enable_nmap = 1

nmap_cmd = /usr/bin/nmap





# Nodes properties 
# ---------------- #

# timeout before ordering a hard reboot, 
# after a soft one at the beginning
# if null, always waits for all the nodes, without time limit
first_check_timeout = 0

# timeout for the last check, when
# rebooting the nodes on the deployed system
last_check_timeout = 300




# sentinelle conf #
# --------------- #
network = 192.168.0
# deployment sentinelle command path
deploy_sentinelle_cmd = /usr/local/bin/DKsentinelle

# deployment sentinelle default args
deploy_sentinelle_default_args = -l root -c rsh

# deployment sentinelle pipelined args
deploy_sentinelle_pipelined_args = -a1 -lroot -crsh -c timeout=2000

# deployment sentinelle endings
deploy_sentinelle_endings = cat /etc/DukeLinux.ip

# deployment sentinelle timeout (seconds)
deploy_sentinelle_timeout = 5

# production sentinelle command path
prod_sentinelle_cmd = /usr/local/bin/DKsentinelle

# production sentinelle default args
prod_sentinelle_default_args = -cssh -lroot -c timeout=2000

# production sentinelle pipelined args
prod_sentinelle_pipelined_args = -a1 -lroot -cssh -c timeout=2000

# production sentinelle endings
prod_sentinelle_endings = hostname -i

# production sentinelle timeout (seconds)
prod_sentinelle_timeout = 5

perl_sentinelle_cmd = /usr/local/bin/sentinelle.pl

# production sentinelle default args
perl_sentinelle_default_args = -c ssh -l root -t 2 -w 50

remote_sentinelle_rsh = /usr/local/bin/DKsentinelle

remote_sentinelle_rsh_default_args = -l root -c rsh

remote_mcat = /usr/local/bin/mcatseg




# database conf #
# ------------- #

# deployment database host
deploy_db_host = localhost         # e.g. localhost

# deployment database name
deploy_db_name = deploytest            # e.g. deploy

# deployment database login
deploy_db_login = deploytest

# deployment database password
deploy_db_psswd = deploytest



# pre-install #
# ----------- #

# path to pre-archive
pre_install_archive = /opt/kadeploy/lib/pre_post_script/pre_install.tgz

# path to pre-install script
pre_install_script = init.ash


# post-install #
# ------------ #

post_install_archive = /opt/kadeploy/lib/pre_post_script/post_install.tgz

# path to post-install script
post_install_script = traitement.ash


# pxe conf #
# -------- #

# parameters for the booting kernel after deployment
kernel_param = console=tty0 console=ttyS0,38400n8


# where the files should be copied

# 1. intel tftp and pxe repository
tftp_repository_intel = /tftpboot/
pxe_rep_intel = pxelinux.cfg/

# 2. tftp and pxe repository
tftp_repository = /tftpboot/
pxe_rep = pxelinux.cfg/

# how to tell it to remote nodes?
tftp_relative_path = boot

# labels allow to define shortcuts
#
# label... = kernel:initrd


label_deploy_x86 = duke-vmlinuz:duke-initrd  console=tty0 console=ttyS0,38400n8 ramdisk_size=20000
label_deploy_x86_64 = duke-vmlinuz.x86_64:duke-initrd.x86_64 console=tty0 console=ttyS0,38400n8 ramdisk_size=20000 

label_deploy_tg3 = duke-vmlinuz:duke-initrd  ETH_DRV=tg3 console=tty0 console=ttyS0,38400n8 ramdisk_size=20000
label_deploy_intel = duke-vmlinuz:duke-initrd  ETH_DRV=e1000 console=tty0 console=ttyS0,38400n8 ramdisk_size=20000
label_deploy_ecluster_hda1 = vmlinuz-2.6.8-1-686-smp:initrd.img-2.6.8-1-686-smp  root=/dev/hda1
label_deploy_ecluster_hda2 = vmlinuz-2.6.8-1-686-smp:initrd.img-2.6.8-1-686-smp  root=/dev/hda2
label_deploy_ecluster_hda5 = vmlinuz-2.6.8-1-686-smp:initrd.img-2.6.8-1-686-smp  root=/dev/hda5

